// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  passwordHash  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  journalEntries JournalEntry[]

  @@map("users")
}

model JournalEntry {
  id              String        @id @default(uuid())
  userId          String
  content         String?       @db.Text
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  finalAudioUrl   String?
  sentiment       String?
  emotionTags     String[]     @default([])
  topicTags       String[]     @default([])
  namedEntities   String[]     @default([])
  keyPoints       String[]     @default([])
  audioChunks     AudioChunk[]
  user            User          @relation(fields: [userId], references: [id])

  @@map("journal_entries")
}

model AudioChunk {
  id              String       @id @default(uuid())
  entryId         String
  chunkOrder      Int
  audioChunkUrl   String
  transcript      String?      @db.Text
  createdAt       DateTime     @default(now())
  journalEntry    JournalEntry @relation(fields: [entryId], references: [id])

  @@map("audio_chunks")
}
